#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 695B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 88B done
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/node:14
#3 ...

#4 [auth] library/node:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:14
#3 DONE 1.9s

#5 [1/4] FROM docker.io/library/node:14@sha256:a158d3b9b4e3fa813fa6c8c590b8f0a860e015ad4e59bbce5744d2f6fd8461aa
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 13.42kB done
#6 DONE 0.1s

#7 [2/4] WORKDIR /app
#7 CACHED

#8 [3/4] COPY . .
#8 DONE 0.2s

#9 [4/4] RUN npm install --production --unsafe-perm && npm run build
#9 0.847 
#9 0.847 > docker-software-delivery@1.0.0 preinstall /app
#9 0.847 > npx npm-force-resolutions
#9 0.847 
#9 4.036 npx: installed 6 in 3.153s
#9 12.53 npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
#9 22.83 added 471 packages from 332 contributors and audited 662 packages in 22.004s
#9 22.99 
#9 22.99 7 packages are looking for funding
#9 22.99   run `npm fund` for details
#9 22.99 
#9 22.99 found 101 vulnerabilities (17 low, 30 moderate, 42 high, 12 critical)
#9 22.99   run `npm audit fix` to fix them, or `npm audit` for details
#9 23.22 
#9 23.22 > docker-software-delivery@1.0.0 build /app
#9 23.22 > node ./node_modules/gulp/bin/gulp.js
#9 23.22 
#9 23.51 [16:35:06] Using gulpfile /app/gulpfile.js
#9 23.51 [16:35:06] Starting 'scripts'...
#9 27.98 [16:35:10] Finished 'scripts' after 4.46 s
#9 27.98 [16:35:10] Starting 'default'...
#9 27.98 [16:35:10] Finished 'default' after 42 Î¼s
#9 DONE 28.3s

#10 exporting to image
#10 exporting layers
#10 exporting layers 2.4s done
#10 writing image sha256:bdd5e90c0964bc2a38be1d371c49e1bc6be8389b6f826c8856808ed95de3e847
#10 writing image sha256:bdd5e90c0964bc2a38be1d371c49e1bc6be8389b6f826c8856808ed95de3e847 0.0s done
#10 naming to docker.io/library/item-app:v1 0.0s done
#10 DONE 2.4s
REPOSITORY            TAG       IMAGE ID       CREATED          SIZE
item-app              v1        bdd5e90c0964   2 seconds ago    949MB
cocomdidin/item-app   v1        3b93a87666f0   45 minutes ago   949MB
cocomdidin/item-app   <none>    d1a59d296f83   50 minutes ago   949MB
mongo                 3         2f21415cb85f   2 years ago      453MB
WARNING! Your password will be stored unencrypted in /home/codespace/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
The push refers to repository [docker.io/cocomdidin/item-app]
e3e19d0530dd: Preparing
921ca62e8714: Preparing
d1a125a06209: Preparing
0d5f5a015e5d: Preparing
3c777d951de2: Preparing
f8a91dd5fc84: Preparing
cb81227abde5: Preparing
e01a454893a9: Preparing
c45660adde37: Preparing
fe0fb3ab4a0f: Preparing
f1186e5061f2: Preparing
b2dba7477754: Preparing
f8a91dd5fc84: Waiting
cb81227abde5: Waiting
e01a454893a9: Waiting
c45660adde37: Waiting
fe0fb3ab4a0f: Waiting
f1186e5061f2: Waiting
b2dba7477754: Waiting
3c777d951de2: Layer already exists
0d5f5a015e5d: Layer already exists
d1a125a06209: Layer already exists
cb81227abde5: Layer already exists
f8a91dd5fc84: Layer already exists
e01a454893a9: Layer already exists
c45660adde37: Layer already exists
fe0fb3ab4a0f: Layer already exists
f1186e5061f2: Layer already exists
b2dba7477754: Layer already exists
921ca62e8714: Pushed
e3e19d0530dd: Pushed
v1: digest: sha256:ff092827cec5cc04d03005df9be80787467f2b0c9ed7325107c95af3db940aed size: 2844
